import { ISubmittableResult } from '@polkadot/types/types';
import { SubmittableExtrinsic } from '@polkadot/api/types';
import { IMessageSendOptions, IMessageSendReplyOptions, Metadata } from './types';
import { GearTransaction } from './Transaction';
export declare class GearMessage extends GearTransaction {
    /**
     * ## Send Message
     * @param message
     * @param meta Metadata
     * @param messageType MessageType
     * @returns Submitted result
     * ```javascript
     * const api = await GearApi.create()
     * const programId = '0xd7540ae9da85e33b47276e2cb4efc2f0b58fef1227834f21ddc8c7cb551cced6'
     * const tx = api.message.send({
     *  destination: messageId,
     *  payload: 'Hello, World!',
     *  gasLimit: 20_000_000
     * }, undefiend, 'String')
     * tx.signAndSend(account, (events) => {
     *  events.forEach(({event}) => console.log(event.toHuman()))
     * })
     * ```
     */
    send(message: IMessageSendOptions, meta?: Metadata, messageType?: string): SubmittableExtrinsic<'promise', ISubmittableResult>;
    /**
     * Sends reply message
     * @param message Message parameters
     * @param meta Metadata
     * @param messageType MessageType
     * @returns Submitted result
     * @example
     * ```javascript
     * const api = await GearApi.create()
     * const messageId = '0xd7540ae9da85e33b47276e2cb4efc2f0b58fef1227834f21ddc8c7cb551cced6'
     * const tx = api.message.sendReply({
     *  replyToId: messageId,
     *  payload: 'Reply message',
     *  gasLimit: 20_000_000
     * }, undefiend, 'String')
     * tx.signAndSend(account, (events) => {
     *  events.forEach(({event}) => console.log(event.toHuman()))
     * })
     * ```
     */
    sendReply(message: IMessageSendReplyOptions, meta?: Metadata, messageType?: string): SubmittableExtrinsic<'promise', ISubmittableResult>;
}
